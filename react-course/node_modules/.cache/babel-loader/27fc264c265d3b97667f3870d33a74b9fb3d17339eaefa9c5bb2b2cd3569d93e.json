{"ast":null,"code":"var _jsxFileName = \"/home/laura/practice/react folder/react-course/src/Components/Videos.jsx\";\nimport { Stack, Box } from '@mui/material';\nimport VideoCard from \"./VideoCard\";\nimport ChannelCard from './ChannelCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videos = _ref => {\n  let {\n    videos\n  } = _ref;\n  console.log(videos);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    flex: \"wrap\",\n    justifyContent: \"start\",\n    gap: 2,\n    children: videos.map((item, indx) => /*#__PURE__*/_jsxDEV(Box, {\n      children: [item.id.videoId && /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 31\n      }, this), item.id.channelId && /*#__PURE__*/_jsxDEV(ChannelCard, {\n        channelDetail: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 33\n      }, this)]\n    }, indx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["Stack","Box","VideoCard","ChannelCard","jsxDEV","_jsxDEV","Videos","_ref","videos","console","log","direction","flex","justifyContent","gap","children","map","item","indx","id","videoId","video","fileName","_jsxFileName","lineNumber","columnNumber","channelId","channelDetail","_c","$RefreshReg$"],"sources":["/home/laura/practice/react folder/react-course/src/Components/Videos.jsx"],"sourcesContent":["import { Stack, Box } from '@mui/material'\nimport VideoCard from \"./VideoCard\";\nimport ChannelCard from './ChannelCard'\n\nconst Videos = ({ videos }) => {\n  console.log(videos)\n  return (\n    <Stack direction=\"row\" flex=\"wrap\" justifyContent=\"start\" gap={2} >\n      {videos.map((item, indx)=>(\n        <Box key={indx}>\n          {item.id.videoId && <VideoCard video={item}/>}\n          {item.id.channelId && <ChannelCard channelDetail={item}/>}\n\n        </Box>\n    ))}</Stack>\n  )\n}\n\nexport default Videos"],"mappings":";AAAA,SAASA,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAC1C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACxBE,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,oBACEH,OAAA,CAACL,KAAK;IAACW,SAAS,EAAC,KAAK;IAACC,IAAI,EAAC,MAAM;IAACC,cAAc,EAAC,OAAO;IAACC,GAAG,EAAE,CAAE;IAAAC,QAAA,EAC9DP,MAAM,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,IAAI,kBACrBb,OAAA,CAACJ,GAAG;MAAAc,QAAA,GACDE,IAAI,CAACE,EAAE,CAACC,OAAO,iBAAIf,OAAA,CAACH,SAAS;QAACmB,KAAK,EAAEJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAC5CR,IAAI,CAACE,EAAE,CAACO,SAAS,iBAAIrB,OAAA,CAACF,WAAW;QAACwB,aAAa,EAAEV;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,GAFjDP,IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIT,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEf,CAAC;AAAAG,EAAA,GAZKtB,MAAM;AAcZ,eAAeA,MAAM;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}